import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

// Step 1: Coustomer class following JavaBeans principles
public class Coustomer {
    private int id;
    private double balance;
    private String firstName;
    private String lastName;

    // Constructor
    public Coustomer(int id, double balance, String firstName, String lastName) {
        this.id = id;
        this.balance = balance;
        this.firstName = firstName;
        this.lastName = lastName;
    }

    // Getters and Setters
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public double getBalance() {
        return balance;
    }

    public void setBalance(double balance) {
        this.balance = balance;
    }

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    @Override
    public String toString() {
        return "Coustomer{" +
                "ID=" + id +
                ", Balance=" + balance +
                ", First Name='" + firstName + '\'' +
                ", Last Name='" + lastName + '\'' +
                '}';
    }
}

// Main Application
class CustomerApp {
    public static void main(String[] args) {
        // Step 3: Create a list of customers
        List<Coustomer> customers = new ArrayList<>();
        customers.add(new Coustomer(3, 1200.75, "arun", "kumar"));
        customers.add(new Coustomer(1, 500.50, "bindu", "rashi "));
        customers.add(new Coustomer(2, 1500.00, "bindu", "priya"));
        customers.add(new Coustomer(4, 1500.00, "bindu", "kumar"));
        customers.add(new Coustomer(5, 700.00, "chandru", "bindu"));

        // Step 4: Define sorting criteria
        Comparator<Coustomer> customerComparator = Comparator
                .comparing(Coustomer::getFirstName)
                .thenComparing(Coustomer::getLastName)
                .thenComparing(Coustomer::getId)
                .thenComparing(Coustomer::getBalance);

        // Step 5: Sort the list
        Collections.sort(customers, customerComparator);

        // Step 6: Display the sorted list
        System.out.println("Sorted Coustomer List:");
        for (Coustomer customer : customers) {
            System.out.println(customer);
        }
    }
